// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id @default(uuid()) @db.Uuid
  name           String
  email          String
  phone          String?
  storageSession StorageSession[]
  packages       Package[]
  storages       StorageListing[]
  createdAt      DateTime         @default(now()) @db.Timestamptz(6)
  modifiedAt     DateTime?        @db.Timestamptz(6)
}

model StorageListing {
  id              String           @id @default(uuid()) @db.Uuid
  image           Image[]
  storageSessions StorageSession[]
  latitude        Float
  longitude       Float
  address         String
  description     String
  size            Int
  storageType     DM_StorageTypes  @relation(fields: [storageTypeId], references: [id])
  storageTypeId   String           @db.Uuid
  owner           User             @relation(fields: [ownerId], references: [id])
  ownerId         String           @db.Uuid
  createdAt       DateTime         @default(now()) @db.Timestamptz(6)
  modifiedAt      DateTime?        @db.Timestamptz(6)
  deletedAt       DateTime?        @db.Timestamptz(6)
}

model Image {
  id             String         @id @default(uuid()) @db.Uuid()
  imageUrl       String
  storageId      String         @db.Uuid()
  storageListing StorageListing @relation(fields: [storageId], references: [id])
  createdAt      DateTime       @default(now()) @db.Timestamptz(6)
  modifiedAt     DateTime?      @db.Timestamptz(6)
  deletedAt      DateTime?      @db.Timestamptz(6)
}

model Package {
  id               String         @id @default(uuid()) @db.Uuid
  storageSession   StorageSession @relation(fields: [storageSessionId], references: [id])
  storageSessionId String         @db.Uuid
  user             User           @relation(fields: [userId], references: [id])
  userId           String         @db.Uuid
  createdAt        DateTime       @default(now()) @db.Timestamptz(6)
  modifiedAt       DateTime?      @db.Timestamptz(6)
  deletedAt        DateTime?      @db.Timestamptz(6)
}

model StorageSession {
  id               String         @id @default(uuid()) @db.Uuid
  storageListing   StorageListing @relation(fields: [storageListingId], references: [id])
  storageListingId String         @db.Uuid
  user             User           @relation(fields: [userId], references: [id])
  userId           String         @db.Uuid
  packages         Package[]
  priceCents       Int
  startDate        DateTime       @db.Timestamptz(6)
  endDate          DateTime       @db.Timestamptz(6)
  createdAt        DateTime       @default(now()) @db.Timestamptz(6)
  modifiedAt       DateTime?      @db.Timestamptz(6)
  deletedAt        DateTime?      @db.Timestamptz(6)
}

model DM_StorageTypes {
  id             String           @id @default(uuid()) @db.Uuid
  storageType    String
  storageListing StorageListing[]
  createdAt      DateTime         @default(now()) @db.Timestamptz(6)
  modifiedAt     DateTime?        @db.Timestamptz(6)
  deletedAt      DateTime?        @db.Timestamptz(6)
}
